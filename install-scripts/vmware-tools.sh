#!/bin/bash
# ðŸ’« https://github.com/jellydn/Arch-Hyprland ðŸ’« #
# Simple VMware Tools (open-vm-tools) installation for better VM integration #

# VMware Tools packages
vmware_pkg=(
  open-vm-tools
  xf86-video-vmware
  xf86-input-vmmouse
)

## WARNING: DO NOT EDIT BEYOND THIS LINE IF YOU DON'T KNOW WHAT YOU ARE DOING! ##
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

# Change the working directory to the parent directory of the script
PARENT_DIR="$SCRIPT_DIR/.."
cd "$PARENT_DIR" || { echo "${ERROR} Failed to change directory to $PARENT_DIR"; exit 1; }

# Source the global functions script
if ! source "$(dirname "$(readlink -f "$0")")/Global_functions.sh"; then
  echo "Failed to source Global_functions.sh"
  exit 1
fi

# Set the name of the log file to include the current date and time
LOG="Install-Logs/install-$(date +%d-%H%M%S)_vmware-tools.log"

# Function to check if running in VMware
is_vmware() {
    # Check multiple ways to detect VMware
    if lspci | grep -i vmware >/dev/null 2>&1; then
        return 0
    elif dmidecode -s system-manufacturer 2>/dev/null | grep -i "vmware" >/dev/null 2>&1; then
        return 0
    elif dmesg 2>/dev/null | grep -i "vmware\|vmxnet\|pvscsi" | head -1 >/dev/null 2>&1; then
        return 0
    else
        return 1
    fi
}

printf "\n%s - Installing ${SKY_BLUE}VMware Tools (open-vm-tools)${RESET} .... \n" "${NOTE}"

# Check if running in VMware
if ! is_vmware; then
    echo "${WARN} VMware environment not detected. Skipping VMware tools installation." | tee -a "$LOG"
    echo "${INFO} This installer is specifically for VMware virtual machines." | tee -a "$LOG"
    printf "\n%.0s" {1..2}
    exit 0
fi

echo "${INFO} VMware environment detected. Installing VMware tools..." | tee -a "$LOG"

# Install VMware packages
for VM_PKG in "${vmware_pkg[@]}"; do
    install_package "$VM_PKG" "$LOG"
done

# Enable and start VMware tools daemon
echo "${INFO} Configuring VMware tools service..." | tee -a "$LOG"

if systemctl list-unit-files | grep -q "vmtoolsd.service"; then
    echo "${INFO} Enabling vmtoolsd service..." | tee -a "$LOG"
    sudo systemctl enable vmtoolsd.service 2>&1 | tee -a "$LOG"
    
    echo "${INFO} Starting vmtoolsd service..." | tee -a "$LOG"
    sudo systemctl start vmtoolsd.service 2>&1 | tee -a "$LOG"
    
    # Check service status
    if systemctl is-active --quiet vmtoolsd.service; then
        echo "${OK} VMware tools service is running" | tee -a "$LOG"
    else
        echo "${WARN} VMware tools service may need manual start after reboot" | tee -a "$LOG"
    fi
else
    echo "${WARN} vmtoolsd.service not found. Service may start automatically." | tee -a "$LOG"
fi

# Create VMware-specific Hyprland optimizations
echo "${INFO} Creating VMware-specific Hyprland configuration..." | tee -a "$LOG"
mkdir -p "$HOME/.config/hypr/vm-configs"

cat > "$HOME/.config/hypr/vm-configs/vmware-optimizations.conf" << 'EOF'
# VMware-specific Hyprland optimizations
# Generated by KooL Arch-Hyprland VMware tools installer

# VMware environment variables
env = WLR_NO_HARDWARE_CURSORS,1
env = WLR_RENDERER_ALLOW_SOFTWARE,1

# VMware optimizations
misc {
    vfr = false  # Disable variable refresh rate for stability
    vrr = 0      # Disable VRR
    disable_hyprland_logo = true
    disable_splash_rendering = true
}

# Simplified animations for better VM performance
animations {
    enabled = true
    bezier = simple, 0.16, 1, 0.3, 1
    animation = windows, 1, 3, simple, slide
    animation = windowsOut, 1, 3, simple, slide
    animation = border, 1, 6, default
    animation = fade, 1, 3, simple
    animation = workspaces, 1, 3, simple, slidevert
}

# Optimized rendering for VMware
render {
    explicit_sync = 0
    explicit_sync_kms = 0
}

# Reduced effects for better performance  
decoration {
    blur {
        enabled = false  # Disable blur for VMware
    }
    drop_shadow = false  # Disable shadows
    rounding = 6         # Keep minimal rounding
}

# VMware display settings
monitor = ,preferred,auto,1
EOF

echo "${OK} VMware configuration created: ~/.config/hypr/vm-configs/vmware-optimizations.conf" | tee -a "$LOG"

# Source the VMware config in main hyprland.conf if it exists
if [[ -f "$HOME/.config/hypr/hyprland.conf" ]]; then
    if ! grep -q "vmware-optimizations.conf" "$HOME/.config/hypr/hyprland.conf"; then
        echo "${INFO} Adding VMware config source to hyprland.conf..." | tee -a "$LOG"
        echo "" >> "$HOME/.config/hypr/hyprland.conf"
        echo "# VMware optimizations" >> "$HOME/.config/hypr/hyprland.conf"
        echo "source = ~/.config/hypr/vm-configs/vmware-optimizations.conf" >> "$HOME/.config/hypr/hyprland.conf"
    fi
fi

# Create simple VMware tips file
cat > "$HOME/.config/hypr/vm-configs/VMWARE-TIPS.md" << 'EOF'
# VMware Tools Setup - KooL Hyprland

## What was installed:
- `open-vm-tools`: Modern VMware Tools replacement
- `xf86-video-vmware`: VMware display driver
- `xf86-input-vmmouse`: VMware mouse driver
- `vmtoolsd.service`: VMware tools daemon (enabled)

## Features enabled:
âœ… Clipboard sharing between host and VM
âœ… Drag and drop file support
âœ… Dynamic screen resolution
âœ… Time synchronization
âœ… Shared folders (if configured in VMware)
âœ… Better mouse integration
âœ… Optimized Hyprland settings for VMware

## VMware Host Settings (Recommended):
1. **Display Settings:**
   - Enable "Accelerate 3D Graphics"
   - Set Video Memory to 256MB or higher
   - Use automatic graphics detection

2. **Options:**
   - Enable "Copy and Paste" 
   - Enable "Drag and Drop"
   - Set time synchronization

3. **Shared Folders:** (Optional)
   - Add shared folders in VM Settings
   - Access via `/mnt/hgfs/` in the VM

## Performance Tips:
- VM runs best with 8GB+ RAM allocated
- Enable hardware acceleration in VMware settings  
- Use VMware Workstation/Fusion (not Player) for best performance
- Close unnecessary applications in the host OS

## Troubleshooting:
- **No clipboard sharing:** Restart vmtoolsd service
- **Resolution issues:** Check VMware display settings
- **Poor performance:** Disable blur and animations in Hyprland
- **Mouse lag:** Ensure mouse integration is enabled in VMware

## Commands:
```bash
# Check VMware tools status
systemctl status vmtoolsd

# Restart VMware tools
sudo systemctl restart vmtoolsd

# Check shared folders
ls /mnt/hgfs/

# Manual resolution change (if needed)
xrandr --output Virtual1 --mode 1920x1080
```
EOF

echo "${OK} VMware Tools installation completed successfully!" | tee -a "$LOG"
echo "${INFO} Tips and configuration saved to ~/.config/hypr/vm-configs/" | tee -a "$LOG"
echo "${NOTE} Reboot recommended for full VMware integration" | tee -a "$LOG"

printf "\n%.0s" {1..2}